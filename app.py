# app.py ‚Äî —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç: –æ–¥–∏–Ω —Ü–≤–µ—Ç–Ω–æ–π –±–ª–æ–∫ —Å –º–µ—Ç—Ä–∏–∫–∞–º–∏ –≤–Ω—É—Ç—Ä–∏
import streamlit as st
import requests
from datetime import datetime

API_KEY = ""  # <- –≤—Å—Ç–∞–≤—å —Å–≤–æ–π OpenWeather API –∫–ª—é—á –∏–ª–∏ –æ—Å—Ç–∞–≤—å –ø—É—Å—Ç—ã–º –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
BASE_URL = "https://api.openweathermap.org/data/2.5/weather"

# –ì–æ—Ä–æ–¥–∞ + –ø–∞—Å—Ç–µ–ª—å–Ω—ã–µ —Ü–≤–µ—Ç–∞
cities = {
    "–ê—Å—Ç–∞–Ω–∞":    {"api": "Astana",     "color": "#cce6ff"},
    "–ê–ª–º–∞—Ç—ã":    {"api": "Almaty",     "color": "#fff6d6"},
    "–£—Ä–∞–ª—å—Å–∫":   {"api": "Oral",       "color": "#e8f6e8"},
    "–®—ã–º–∫–µ–Ω—Ç":   {"api": "Shymkent",   "color": "#fff0e0"},
    "–ê–∫—Ç–æ–±–µ":    {"api": "Aktobe",     "color": "#e9e8ff"},
    "–ê–∫—Ç–∞—É":     {"api": "Aktau",      "color": "#dff3ff"},
    "–ê—Ç—ã—Ä–∞—É":    {"api": "Atyrau",     "color": "#fff8e6"},
    "–ö–∞—Ä–∞–≥–∞–Ω–¥–∞": {"api": "Karaganda",  "color": "#ffeef6"},
    "–ö–æ—Å—Ç–∞–Ω–∞–π":  {"api": "Kostanay",   "color": "#eaffff"},
}

def fetch_weather(api_name: str):
    if not API_KEY:
        return {
            "ok": True,
            "name": api_name,
            "temp": round(10 + (hash(api_name) % 20) - 5, 1),
            "humidity": 50 + (hash(api_name) % 40),
            "pressure": 990 + (hash(api_name) % 40),
            "desc": "—á–∞—Å—Ç–∏—á–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å"
        }
    try:
        params = {"q": f"{api_name},KZ", "appid": API_KEY, "units": "metric", "lang": "ru"}
        r = requests.get(BASE_URL, params=params, timeout=7)
        data = r.json()
        if r.status_code != 200:
            return {"ok": False, "error": data.get("message", f"HTTP {r.status_code}")}
        return {
            "ok": True,
            "name": data.get("name", api_name),
            "temp": data["main"]["temp"],
            "humidity": data["main"]["humidity"],
            "pressure": data["main"]["pressure"],
            "desc": data["weather"][0]["description"]
        }
    except Exception:
        return {"ok": False, "error": "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ—Ç API."}

st.set_page_config(page_title="Weather AI Kazakhstan", layout="wide")
st.title("üå§ Weather AI ‚Äî –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω")

col_left, col_right = st.columns([1, 2])

with col_left:
    st.subheader("–í—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞")
    city = st.selectbox("", list(cities.keys()))
    now = datetime.now()
    st.markdown(f"<div style='font-size:16px; margin-top:8px;'>üìÖ <b>{now.strftime('%d.%m.%Y')}</b></div>", unsafe_allow_html=True)
    st.markdown(f"<div style='font-size:16px;'>‚è∞ <b>{now.strftime('%H:%M:%S')}</b></div>", unsafe_allow_html=True)
    st.caption("–ï—Å–ª–∏ API –∫–ª—é—á –Ω–µ –∑–∞–¥–∞–Ω ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.")

with col_right:
    color = cities[city]["color"]
    info = fetch_weather(cities[city]["api"])

    if not info.get("ok"):
        err = info.get("error", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞")
        st.markdown(f"""
        <div style='width:100%; min-height:400px; background:{color}; border-radius:12px; display:flex; justify-content:center; align-items:center;'>
            <div style='font-size:18px; color:#800;'>{err}</div>
        </div>
        """, unsafe_allow_html=True)
    else:
        st.markdown(f"""
        <div style='width:100%; min-height:400px; background:{color}; border-radius:12px; padding:24px; box-sizing:border-box;'>
            <h1 style='text-align:center; margin-bottom:12px;'>{city}</h1>
            <div style='text-align:center; font-size:18px; margin-bottom:6px;'>üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {info['temp']} ¬∞C</div>
            <div style='text-align:center; font-size:18px; margin-bottom:6px;'>üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {info['humidity']} %</div>
            <div style='text-align:center; font-size:18px; margin-bottom:6px;'>‚öñ –î–∞–≤–ª–µ–Ω–∏–µ: {info['pressure']} hPa</div>
            <div style='text-align:center; font-size:18px; margin-top:12px;'>–ü–æ–≥–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {info['desc'].capitalize()}</div>
        </div>
        """, unsafe_allow_html=True)
