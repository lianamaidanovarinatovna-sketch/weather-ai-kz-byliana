import streamlit as st
import requests
from PIL import Image, ImageDraw

# ========================
# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ API
# ========================
API_KEY = "–≤–∞—à_–∫–ª—é—á_OpenWeatherMap"  # –í—Å—Ç–∞–≤—å —Å—é–¥–∞ —Å–≤–æ–π API –∫–ª—é—á OpenWeatherMap
BASE_URL = "https://api.openweathermap.org/data/2.5/weather"

# ========================
# –ì–æ—Ä–æ–¥–∞ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞
# ========================
cities = {
    "–ê—Å—Ç–∞–Ω–∞": {"top_color": "#87CEFA", "bottom_color": "#FFFFFF"},       # —Å–≤–µ—Ç–ª–æ-–≥–æ–ª—É–±–æ–π ‚Üí –±–µ–ª—ã–π
    "–ê–ª–º–∞—Ç—ã": {"top_color": "#228B22", "bottom_color": "#ADFF2F"},      # –ª–µ—Å–Ω–æ–π –∑–µ–ª–µ–Ω—ã–π ‚Üí —Å–≤–µ—Ç–ª–æ-–∑–µ–ª–µ–Ω—ã–π
    "–®—ã–º–∫–µ–Ω—Ç": {"top_color": "#FFD700", "bottom_color": "#FFA500"},     # –∑–æ–ª–æ—Ç–æ–π ‚Üí –æ—Ä–∞–Ω–∂–µ–≤—ã–π
    "–ê–∫—Ç–æ–±–µ": {"top_color": "#4682B4", "bottom_color": "#B0C4DE"},      # —Å—Ç–∞–ª—å–Ω–æ–π —Å–∏–Ω–∏–π ‚Üí —Å–≤–µ—Ç–ª–æ-–≥–æ–ª—É–±–æ–π
    "–ê–∫—Ç–∞—É": {"top_color": "#1E90FF", "bottom_color": "#00BFFF"},       # –≥–æ–ª—É–±–æ–µ –º–æ—Ä–µ
    "–ê—Ç—ã—Ä–∞—É": {"top_color": "#20B2AA", "bottom_color": "#98FB98"},      # –±–∏—Ä—é–∑–æ–≤—ã–π ‚Üí —Å–≤–µ—Ç–ª–æ-–∑–µ–ª–µ–Ω—ã–π
    "–ö–∞—Ä–∞–≥–∞–Ω–¥–∞": {"top_color": "#708090", "bottom_color": "#D3D3D3"},   # —Å–µ—Ä–æ-–≥–æ–ª—É–±–æ–π
    "–ö–æ—Å—Ç–∞–Ω–∞–π": {"top_color": "#87CEEB", "bottom_color": "#F0E68C"}     # –Ω–µ–±–µ—Å–Ω–æ-–≥–æ–ª—É–±–æ–π ‚Üí —Å–≤–µ—Ç–ª–æ-—Ö–∞–∫–∏
}

# ========================
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω–æ–≥–æ —Ñ–æ–Ω–∞
# ========================
def generate_gradient(width=800, height=400, top_color="#87CEFA", bottom_color="#FFFFFF"):
    img = Image.new("RGB", (width, height), "#FFFFFF")
    draw = ImageDraw.Draw(img)
    for y in range(height):
        r = int(int(top_color[1:3],16)(1 - y/height) + int(bottom_color[1:3],16)(y/height))
        g = int(int(top_color[3:5],16)(1 - y/height) + int(bottom_color[3:5],16)(y/height))
        b = int(int(top_color[5:7],16)(1 - y/height) + int(bottom_color[5:7],16)(y/height))
        draw.line([(0,y),(width,y)], fill=(r,g,b))
    return img

# ========================
# –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å Streamlit
# ========================
st.set_page_config(page_title="–ü–æ–≥–æ–¥–∞ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω", layout="wide")
st.title("üå§ –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –ø–æ –≥–æ—Ä–æ–¥–∞–º –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞")

# –í—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞
city = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥:", list(cities.keys()))
colors = cities[city]

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–æ–Ω–∞
bg_img = generate_gradient(top_color=colors["top_color"], bottom_color=colors["bottom_color"])
st.image(bg_img, use_column_width=True)

# ========================
# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–≥–æ–¥—ã
# ========================
params = {
    "q": city,
    "appid": API_KEY,
    "units": "metric",
    "lang": "ru"
}

response = requests.get(BASE_URL, params=params)
if response.status_code == 200:
    data = response.json()
    temp = data["main"]["temp"]
    humidity = data["main"]["humidity"]
    pressure = data["main"]["pressure"]
    weather_desc = data["weather"][0]["description"]

    st.subheader(f"–ü–æ–≥–æ–¥–∞ –≤ {city}: {weather_desc.capitalize()}")
    st.write(f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp} ¬∞C")
    st.write(f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity} %")
    st.write(f"‚öñ –î–∞–≤–ª–µ–Ω–∏–µ: {pressure} hPa")
else:
    st.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ!")

# ========================
# –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
# ========================
st.markdown("---")
st.markdown("*–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–º —Ñ–æ–Ω–æ–º –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≥–æ—Ä–æ–¥–∞!*")
